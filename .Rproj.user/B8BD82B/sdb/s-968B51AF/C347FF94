{
    "collab_server" : "",
    "contents" : "# adds %>% piping operator\n# useful for neater code\nlibrary(magrittr)\n\n## Assumed file length (without header)\nfileLength <- 32896\nthreshhold <- 0.5\n\n\n## helper functions written by me\n\n# input must be a data.table\ngetCols3to5 <- function(scoresDT) {\n  ncol(scoresDT) %>% min(5, .) %>% seq %>% setdiff(., 1:2) %>%\n                 scoresDT[,.,with=FALSE] %>% return\n}\n\ngetRangeCols <-function(Cols3To5) {\n  apply(Cols3To5, 2, range) %>% return\n}\n\ngetEscoresInd <- function(RangeCols3To5, threshhold) {\n    EscoresInd <- intersect(which(RangeCols3To5[1,] >=  -threshhold),\n                        which(RangeCols3To5[2,] <= threshhold))\n    return(EscoresInd)\n}\n\n## Helper function to remove first row (header) from tables\n## fileLength is the correct file length without a header\nremoveHeader <- function(filelength, dataTable) {\n  if(nrow(dataTable) == (fileLength + 1)) {\n    dataTable = dataTable[-1,]\n  }\n  return(dataTable)\n}\n\n## call in construct_summ file is commented out\nCheckEscoresCol <- function(file.name) {\n\n  scoresDT <- fread(file.name, header=FALSE)\n  scoresDT <- removeHeader(filelength, scoresDT)\n\n  Cols3To5 <- getCols3to5(scoresDT)\n  RangeCols3To5 <- getRangeCols(Cols3To5)\n  EscoresInd <- getEscoresInd(RangeCols3To5, threshhold)\n  returnValues <- c(EscoresInd, scoresDT, Cols3To5)\n\n  return(returnValues)\n\n## easier version\n # file.name %>% fread(., header=FALSE)\n #           %>% removeHeader(filelength, .)\n #            -> scoresDT\n # scoresDT  %>% getRangeCols3to%(.)\n #           %>% getEscoresInd(., threshhold)\n #           %>% c(., scoresDT, Cols3To5)\n #           %>% return(.)\n}\n\n\n##called in construct_summ\nCreateEscores<-function(file.name) {\n\n  # might not work saving it like this\n  values <- CheckEscoresCol(file.name)\n  EscoresInd <- values[1]; scoresDT <- values[2]; Cols3To5 <- values[3]\n\n  Escores <- Cols3To5[,EscoresInd,with=FALSE]\n\n\n  ## doing something to the 1st column of scoresDT\n  ## think unlist turns a matrix into a list, but we're working w a column?\n  mersSeq1 <- unlist(scoresDT[,1, with=FALSE])\n  ## 2nd column of scoresDT\n  mersSeq2 <- unlist(scoresDT[,2, with=FALSE])\n  mersSeq <- cbind(mersSeq1, mersSeq2)\n\n  matchInd <- mapply(function(subseqs) unlist(apply(as.matrix(subseqs), 1, function(subseq) which(mersSeq==subseq, arr.ind=TRUE)[1,1])),\n                   subseqList,\n                   SIMPLIFY=FALSE)\n  EscoresList <- mapply(function(x) Escores[x], matchInd)\n  return(EscoresList)\n}\n\n\n# load(\"/p/keles/CAGI2015/volumeB/ProcessedData/escores8mer_ref_human.Rda\")\n# sum(abs(enrscoresList$FOXN2-Escores[matchInd[[1]]]))\n\n",
    "created" : 1466439358978.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2849664435",
    "id" : "C347FF94",
    "lastKnownWriteTime" : 1466457570,
    "last_content_update" : 1466457570405,
    "path" : "~/keles/R/eqtl.pipeline/R/8merScoresMODIFIED.R",
    "project_path" : "R/8merScoresMODIFIED.R",
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}